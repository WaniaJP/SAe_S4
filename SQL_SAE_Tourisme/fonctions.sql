
USE sondage;

DROP FUNCTION IF EXISTS NB_CALORIE;
DROP FUNCTION IF EXISTS TAUX_SUCRE;
DROP FUNCTION IF EXISTS TAUX_FIBRES;
DROP FUNCTION IF EXISTS VERIFICATION;
DROP PROCEDURE IF EXISTS BILAN;
DROP PROCEDURE IF EXISTS POURCENTAGE_ALIMENTS;
DROP PROCEDURE IF EXISTS NB_ALIMENTS_BIO;
DROP PROCEDURE IF EXISTS NB_ALIMENTS_VEGAN;
DROP PROCEDURE IF EXISTS NB_ALIMENTS_HALAL;
DROP PROCEDURE IF EXISTS NB_ALIMENTS_CACHER;

DELIMITER $$
CREATE FUNCTION NB_CALORIE(IdP INTEGER)
RETURNS DECIMAL(10,2)
BEGIN
DECLARE Vtaux DECIMAL(10,2);
SELECT SUM(D.Energie_Reglement_UE_kcal100g) INTO Vtaux
FROM DONNEES_SANTE D 
JOIN REPONSE_SONDAGE R ON D.Alim_Code = R.Alim_Code
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code
WHERE R.Administre = IdP;
RETURN Vtaux;
END$$
DELIMITER ;



DELIMITER $$
CREATE FUNCTION TAUX_SUCRE(IdP INT) RETURNS DECIMAL(10,2)
BEGIN
    DECLARE Vtaux DECIMAL(10,2);
    SELECT (COUNT(DISTINCT D.Alim_Code)/10)*100 INTO Vtaux
    FROM DONNEES_SANTE D
    JOIN REPONSE_SONDAGE R ON R.Alim_Code = D.Alim_Code
    JOIN ALIMENTS A ON D.Alim_Code = A.Alim_Code
    WHERE R.Administre = IdP 
    AND (
        D.Glucides_g100g IS NOT NULL OR 
        D.Sucres_g100g IS NOT NULL OR 
        D.Fructose_g100g IS NOT NULL OR 
        D.Galactose_g100g IS NOT NULL OR 
        D.Glucose_g100g IS NOT NULL OR 
        D.Lactose_g100g IS NOT NULL OR 
        D.Maltose_g100g IS NOT NULL OR 
        D.Saccharose_g100g IS NOT NULL
    );
    RETURN Vtaux;
END $$
DELIMITER ;

SELECT (COUNT(DISTINCT D.Alim_Code)/10)*100
FROM DONNEES_SANTE D
    JOIN REPONSE_SONDAGE R ON R.Alim_Code = D.Alim_Code
    JOIN ALIMENTS A ON D.Alim_Code = A.Alim_Code
WHERE R.Administre = 1
AND (
        D.Glucides_g100g IS NOT NULL OR 
        D.Sucres_g100g IS NOT NULL OR 
        D.Fructose_g100g IS NOT NULL OR 
        D.Galactose_g100g IS NOT NULL OR 
        D.Glucose_g100g IS NOT NULL OR 
        D.Lactose_g100g IS NOT NULL OR 
        D.Maltose_g100g IS NOT NULL OR 
        D.Saccharose_g100g IS NOT NULL
    )
ORDER BY 1 DSC;

DELIMITER $$
CREATE FUNCTION TAUX_FIBRES(IdP INT) RETURNS DECIMAL(10,2)
BEGIN
    DECLARE Vtaux DECIMAL(10,2);
    SELECT (COUNT(DISTINCT D.Alim_Code)/10)*100 INTO Vtaux 
    FROM DONNEES_SANTE D
    JOIN REPONSE_SONDAGE R ON R.Alim_Code = D.Alim_Code
    JOIN ALIMENTS A ON D.Alim_Code = A.Alim_Code
    WHERE R.Administre = IdP AND D.Fibres_alimentaires_g100g IS NOT NULL;
    RETURN Vtaux;
END $$
DELIMITER ;




DELIMITER $$
CREATE FUNCTION VERIFICATION(Administre_ INT) RETURNS BOOLEAN
BEGIN
    DECLARE nb INT;
    SELECT COUNT(DISTINCT Administre) INTO nb 
    FROM UTILISATEUR 
    WHERE Administre = Administre_;
    IF nb <> 0 THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END $$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE BILAN(Administre_ INT)
BEGIN
    DECLARE bool BOOLEAN;
    SELECT VERIFICATION(Administre_) INTO bool;
    IF bool THEN
        SELECT TAUX_FIBRES(Administre_) AS TauxFibres, 
               TAUX_SUCRE(Administre_) AS TauxSucre, 
               NB_CALORIE(Administre_) AS Calories;
    ELSE
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = "Erreur : ce administre n'existe pas dans la table UTILISATEUR";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE POURCENTAGE_ALIMENTS()
BEGIN
SELECT A.NOM_FR, (COUNT(DISTINCT R.Alim_Code)/10)*100 as 'Pourcentage' FROM REPONSE_SONDAGE R 
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code 
GROUP BY R.Administre 
ORDER BY 1;
END$$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE NB_ALIMENTS_HALAL(Administre_ INTEGER)
BEGIN
SELECT (COUNT(DISTINCT R.Alim_Code)/10)*100 as 'Pourcentage'
FROM REPONSE_SONDAGE R 
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code
WHERE R.Administre = Administre_ AND A.Nom_Fr LIKE '%halal%';
END$$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE NB_ALIMENTS_CACHER(Administre_ INTEGER)
BEGIN
SELECT (COUNT(DISTINCT R.Alim_Code)/10)*100 as 'Pourcentage'
FROM REPONSE_SONDAGE R 
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code
WHERE R.Administre = Administre_ AND A.Nom_Fr LIKE '%casher%';
END$$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE NB_ALIMENTS_BIO(Administre_ INTEGER)
BEGIN
SELECT (COUNT(DISTINCT R.Alim_Code)/10)*100 as 'Pourcentage'
FROM REPONSE_SONDAGE R 
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code
WHERE R.Administre = Administre_ AND A.Nom_Fr LIKE '%bio%';
END$$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE NB_ALIMENTS_VEGAN(Administre_ INTEGER)
BEGIN
SELECT (COUNT(DISTINCT R.Alim_Code)/10)*100 as 'Pourcentage'
FROM REPONSE_SONDAGE R 
JOIN ALIMENTS A ON R.Alim_Code = A.Alim_Code
WHERE R.Administre = Administre_ AND A.Nom_Fr LIKE '%vegan%';
END$$
DELIMITER ;






